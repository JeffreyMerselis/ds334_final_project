---
title: "Final Presentation"
format: revealjs
---

```{r}
#| echo: false
#| output: false
#| warning: false

library(tidyverse)

survivalists <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-24/survivalists.csv')
loadouts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-24/loadouts.csv')
episodes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-24/episodes.csv')
seasons <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-24/seasons.csv')

filtered_season <- 6
```

## Data

* Explore what makes someone successful on Alone

* Have contestants improved or changed over time?

* Whats different between the seasons?

## Visual 1

```{r}
#| echo: false
#| output: false
#| warning: false
winner <- survivalists |>
  filter(season == filtered_season, result == 1) |>
  select(name) |> 
  pull()

winner_items <- loadouts |>
  filter(season == filtered_season, name == winner) |>
  select(item) |>
  pull()

other_items_count <- loadouts |>
  filter(season == filtered_season) |>
  group_by(item) |>
  summarize(count = n()) |>
  mutate(brought_by_winner = item %in% winner_items, 
         color = ifelse(brought_by_winner, "blue", "red")) |>
  arrange(desc(count)) |>
  mutate(item = fct_reorder(item, count)) 
```

```{r}
ggplot(other_items_count, aes(x = item, y = count, fill = color)) +
  geom_bar(stat = "identity") +
  labs(
    title = paste("Winner vs. Loser Loadouts", filtered_season),
    x = "Item",
    y = "Count",
    fill = "Brought by Winner in Blue"
  ) +
  scale_fill_manual(values = c("blue", "red")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

## Visual 2

```{r}
#| echo: false
#| output: false
#| warning: false
days_df <- survivalists |>
  mutate(won = ifelse(result == 1, TRUE, FALSE)) |>
  select(days_lasted, age, won)
```

```{r}
ggplot(days_df, aes(x = age, y = days_lasted, color = won)) +
  geom_point(size = 3) + 
  labs(
    title = "Age vs. Days",
    x = "Age",
    y = "Days Lasted",
    color = "Won"
  ) +
  scale_color_manual(values = c("red", "blue")) +  
  theme_minimal() 
```

## Visual 3

```{r}
season_days <- survivalists |>
  filter(season == filtered_season)

average_days <- survivalists |>
  group_by(result) |>
  summarize(average_days_lasted = mean(days_lasted))
```

```{r}
ggplot() +
  geom_line(data = season_days, aes(x = result, y = days_lasted), 
            color = "blue", size = 1) +
  geom_point(data = season_days, aes(x = result, y = days_lasted), 
             color = "blue", size = 2.5) + 
  geom_line(data = average_days, aes(x = result, y = average_days_lasted), 
            color = "red", size = 1) +
  geom_point(data = average_days, aes(x = result, y = average_days_lasted), 
             color = "red", size = 2.5) +
  labs(
    title = "Average Days Series vs Season",
    x = "Placement",
    y = "Days Lasted") +
  theme_minimal()
```

## Visual 4

```{r}
ggplot(episodes, aes(x = as.factor(season), y = imdb_rating)) +
  geom_boxplot() +
  labs(title = "Ratings by Season", x = "Season", y = "(IMDB) Rating") +
  theme_minimal()
```

## Visual 5

```{r}
ggplot(episodes, aes(x = air_date, y = viewers)) +
  geom_line() +
  labs(title = "viewer over time", x = "date", y = "views in millions") +
  theme_minimal()
```

